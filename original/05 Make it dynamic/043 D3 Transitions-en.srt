1
00:00:06,370 --> 00:00:11,200
At this point we have a chart that's pretty much doing exactly what we want it to.

2
00:00:11,200 --> 00:00:17,050
However we're not yet using the magical powers of the T-3 transition suite to give our visualization

3
00:00:17,050 --> 00:00:20,650
the touch of beauty that D-3 can so easily provide

4
00:00:24,820 --> 00:00:30,430
although we need to do it as a transition to our code to add this line just before we set the attributes

5
00:00:31,360 --> 00:00:36,910
any attributes that we said before the transition are applied to the shapes straight away but anything

6
00:00:36,910 --> 00:00:43,430
that we write after the transition will be applied gradually we're passing in a number of milliseconds

7
00:00:43,430 --> 00:00:47,600
for the transition to be applied over using the generation method.

8
00:00:47,600 --> 00:00:53,360
In this example where we're starting the shape of the y position at the bottom of the screen and then

9
00:00:53,360 --> 00:00:57,900
we're using the transition to gradually pull the shape up into a few.

10
00:00:58,060 --> 00:01:05,320
We're also making a transition from a a pastie of 0 meaning the shape is invisible to a value of 1 which

11
00:01:05,320 --> 00:01:07,250
is completely solid.

12
00:01:07,270 --> 00:01:11,450
This will give us the nice effect of the shape gradually fading into existence.

13
00:01:14,490 --> 00:01:19,410
A good thing to note here is that you'll sometimes see a transition defined as a variable as we can

14
00:01:19,410 --> 00:01:25,380
see here which is nice because we don't have to keep writing this code repeatedly and we can change

15
00:01:25,380 --> 00:01:30,180
the length of our transition in just one place.

16
00:01:30,350 --> 00:01:32,950
Now that we've seen how the syntax looks.

17
00:01:33,170 --> 00:01:36,100
Let's add some transitions into Al-Barakaat.

18
00:01:36,140 --> 00:01:43,250
Firstly I'm defining a transition variable of the top of my file calling it t and giving a generation

19
00:01:43,250 --> 00:01:46,050
of 750 milliseconds.

20
00:01:46,130 --> 00:01:52,780
It's important that we always keep this number lower than the value of loops delay or start off with

21
00:01:52,780 --> 00:01:53,810
the axes here.

22
00:01:53,840 --> 00:02:00,910
The top of this update function all that we need to do is to place a transition before this call method.

23
00:02:01,140 --> 00:02:06,620
Next I'm going to add a transition for exit selection straight away.

24
00:02:06,630 --> 00:02:13,440
I'm going to change the color of the existing bars to read then after the transition I'm going to gradually

25
00:02:13,440 --> 00:02:15,500
change its height value to zero.

26
00:02:15,600 --> 00:02:17,720
So it slides away from the screen.

27
00:02:18,000 --> 00:02:21,930
We'll also need to transition the y value to the bottom by grid.

28
00:02:22,110 --> 00:02:29,770
So we'll pass in y of 0 which is the pixel position at the bottom of the chart for our updating bars.

29
00:02:29,790 --> 00:02:34,160
I'm just going to add the transition for any of these attributes get guess.

30
00:02:34,500 --> 00:02:40,350
Then finally I'm going to make these new buyers come in from the ground up like we saw in the example

31
00:02:40,950 --> 00:02:43,300
or move these y type values.

32
00:02:43,350 --> 00:02:56,320
After that transition and I'll add in their initial states before the transition.

33
00:02:56,360 --> 00:03:00,610
So now we can see that these transitions are working.

34
00:03:00,700 --> 00:03:06,010
You might notice here that the code that we're writing isn't particularly succinct we're repeating the

35
00:03:06,010 --> 00:03:13,900
same code for entering and updating elements something that we can do here is to use D-3 merge method

36
00:03:14,470 --> 00:03:18,870
to set the attributes of the enter and update selections at the same time.

37
00:03:20,300 --> 00:03:27,250
Let me show you how this merge method looks we're calling the merge method on end enter selection and

38
00:03:27,250 --> 00:03:28,550
passing in the selection.

39
00:03:28,570 --> 00:03:35,250
What we want to merge it with in this case it's a rechts variable which represents update selection.

40
00:03:36,670 --> 00:03:42,580
All of these actual methods that we're changing before the merge call are applied just to enter selection

41
00:03:43,420 --> 00:03:50,110
and all the actual methods that we apply after our merge call or apply to both our enter and update

42
00:03:50,110 --> 00:03:51,040
selections.

43
00:03:52,290 --> 00:03:58,830
To test out our exit function I'm going to pass in a different array of data to update function depending

44
00:03:58,830 --> 00:04:00,380
on the value of the flag.

45
00:04:01,740 --> 00:04:08,280
Let's say that if our flag is set to true meaning that we're looking at revenues then we'll just use

46
00:04:08,280 --> 00:04:10,250
the regular array.

47
00:04:10,380 --> 00:04:17,390
But if we're looking at profit's then we'll chop off the first element in our array.

48
00:04:17,410 --> 00:04:24,940
So here I am setting a new data variable which either takes on a normal array in the first case or in

49
00:04:24,940 --> 00:04:28,610
the second case I'm using be a race slice method to return.

50
00:04:28,630 --> 00:04:35,820
Everything beyond that first item after we pass this code into an update function and refresh the page

51
00:04:36,540 --> 00:04:38,200
we can see how this is working.

52
00:04:39,100 --> 00:04:44,770
There's a problem with this visualization as it is at that moment when the chart shifts from profit

53
00:04:44,770 --> 00:04:46,030
to revenue.

54
00:04:46,180 --> 00:04:52,400
The last bar is the one that's entering and exiting although it's really our first bar for January they

55
00:04:52,420 --> 00:04:58,410
should be changing the reason that this is happening is because we're providing data to our selection.

56
00:04:58,420 --> 00:05:00,990
It's just an array.

57
00:05:01,120 --> 00:05:07,660
When we first date our data join D-3 just assumes that our rate will always stay in the same order.

58
00:05:08,830 --> 00:05:15,820
Actually in this case the first element in the array is missing when we look at the profits.

59
00:05:15,890 --> 00:05:24,080
This means that the bar for January and profits is associated with above the February and revenues to

60
00:05:24,080 --> 00:05:30,350
fix this the data method can take an optional second argument which should be a function that returns

61
00:05:30,350 --> 00:05:34,230
a key to match items between different rates.

62
00:05:35,580 --> 00:05:42,450
This means that D-3 will know how to associate each SVGA with the right point in the data array based

63
00:05:42,450 --> 00:05:44,810
on what the function returns.

64
00:05:44,820 --> 00:05:51,860
For example here will use a function that returns the month of the data so that data join tracks the

65
00:05:51,860 --> 00:05:58,020
items based on their month value rather than by the items index in the array.

66
00:05:58,940 --> 00:06:05,030
After refreshing the page we can now see that these bars are moving consistently with Access and it

67
00:06:05,030 --> 00:06:09,180
now looks like the bar for January is the one that's entering and exiting.

68
00:06:09,380 --> 00:06:12,590
This fix will be particularly important when you close the gap.

69
00:06:12,590 --> 00:06:18,470
Mind the visualisation for your second class project because that visualization relies on being able

70
00:06:18,470 --> 00:06:24,510
to follow each of the individual dots as time goes on and you'll get some weird behavior if you miss

71
00:06:24,510 --> 00:06:25,490
that step about

72
00:06:28,370 --> 00:06:33,910
at this point we now have a bar chart that's updated really smoothly and we never had to make a few

73
00:06:33,910 --> 00:06:37,180
tweaks to completely change the behavior of our chart.

74
00:06:37,690 --> 00:06:42,360
I also introduce you to the filter function which will be really useful when we want to change up our

75
00:06:42,400 --> 00:06:48,700
data later in this course in the next leg turn again to demonstrate how we can easily convert the chart

76
00:06:48,700 --> 00:06:53,800
that we have now to a scatterplot which will be at that thing into your second class project at the

77
00:06:53,800 --> 00:06:54,750
end of the section.

