1
00:00:06,550 --> 00:00:13,030
And this lecture I'll be talking about word clouds which are a special type of visualization designed

2
00:00:13,030 --> 00:00:19,140
to show the most commonly used words in a piece of text for D-3 version 3.

3
00:00:19,210 --> 00:00:26,020
Somebody in the community created a fantastic plug in lay out for generating world class however this

4
00:00:26,020 --> 00:00:29,980
plugin still hasn't been updated to the latest version.

5
00:00:30,040 --> 00:00:35,470
I'll be walking through a piece of community code that was written by somebody else which applies some

6
00:00:35,470 --> 00:00:41,810
fixes to this plug in to make the world class work with version 4.

7
00:00:41,820 --> 00:00:44,360
So what exactly is a word cloud.

8
00:00:45,220 --> 00:00:50,800
You're most likely to have seen word clouds in the context of a Web site called Wordle where you could

9
00:00:50,800 --> 00:00:56,440
paste in a big block of text and then get back something that looks like this where the size of the

10
00:00:56,440 --> 00:01:00,510
text representing how many times a word is used.

11
00:01:00,520 --> 00:01:05,620
This is a really useful visualization to never have to build because it gives a fun and interesting

12
00:01:05,620 --> 00:01:12,210
way to visualize words although there are lots of great examples out there of word clouds written in

13
00:01:12,210 --> 00:01:16,550
D-3 because there's is a bit more of a niche visualization.

14
00:01:16,560 --> 00:01:23,270
There aren't that many version for implementations I'm using the search page for block builder to see

15
00:01:23,270 --> 00:01:30,200
which implementations already exist in version for this is the one they ultimately settled on where

16
00:01:30,220 --> 00:01:35,290
somebody in the community has written some edits into the D-3 cloud plugin library.

17
00:01:35,290 --> 00:01:41,290
So they may even use it with version for this example here it works with Chinese characters.

18
00:01:41,530 --> 00:01:48,280
They're conveniently The data also comes with some English characters that we can sub in and that the

19
00:01:48,280 --> 00:01:53,790
size of these pieces of text don't actually mean anything since they're generated at random.

20
00:01:54,070 --> 00:02:01,660
But we could easily tie this attribute to something data here's my local version of this code which

21
00:02:01,660 --> 00:02:05,420
I've copied into my workspace.

22
00:02:05,660 --> 00:02:11,390
You can see that we're including this D-3 cloud file here which is a community edit that came with this

23
00:02:11,390 --> 00:02:13,020
example.

24
00:02:13,430 --> 00:02:19,280
As usual we're setting up everything that we need with margins and loading in our data from a cxxviii

25
00:02:19,280 --> 00:02:29,240
file and data folder Ahmed to console logs here to show what's going on with data.

26
00:02:29,320 --> 00:02:34,770
The first log here is showing the format of data as it's loaded in Frolov file.

27
00:02:34,870 --> 00:02:40,990
We have an array of teams with both Chinese and English names and for each team we have to state that

28
00:02:40,990 --> 00:02:47,880
it belongs to were then passing this array of data into the words method of a word cloud layer.

29
00:02:48,490 --> 00:02:54,220
After we do this we have a new set of attributes which can get added on to each element in our array

30
00:02:54,850 --> 00:02:59,950
giving us access to some coordinates where an item should be placed on the screen as well as the font

31
00:02:59,950 --> 00:03:03,030
size and some styling for each of them.

32
00:03:03,100 --> 00:03:08,230
It's important to note that this layer function is destructively altering the array that we read and

33
00:03:08,230 --> 00:03:09,330
from our data.

34
00:03:09,610 --> 00:03:16,590
Rather than creating a new array to contain a layer this carried him might look a little confusing.

35
00:03:16,630 --> 00:03:23,560
So break it up a bit so that it's easier to read we using a D-3 nest function to group these items in

36
00:03:23,560 --> 00:03:30,730
our data array according to this date fields then once we have that we're passing this array into the

37
00:03:30,730 --> 00:03:36,080
D-3 kids function which will return a string of all of the different keys together.

38
00:03:36,930 --> 00:03:42,140
This is just being used as a quick way to get a list of distinct state names in our data.

39
00:03:42,450 --> 00:03:49,220
And there are a few different ways that we could also read this where this font size variable is a scale

40
00:03:49,220 --> 00:03:53,480
that we'll be using to set the size of each of our pieces of text.

41
00:03:53,480 --> 00:03:59,040
The scale is a power scale which essentially does the opposite of a log scale.

42
00:03:59,060 --> 00:04:04,730
This will mean that if we passed in two inputs that are really close together then we'd get out to outputs

43
00:04:04,730 --> 00:04:06,680
that really far apart.

44
00:04:06,940 --> 00:04:13,370
The scale runs from an input inside the domain of 0 1 and an output inside the range of forty eight

45
00:04:14,600 --> 00:04:17,540
next we're saying up our cloud.

46
00:04:17,840 --> 00:04:20,500
First we're setting the width and height of a word cloud.

47
00:04:20,510 --> 00:04:27,160
Using this size method next we're passing in our array of words with this words method and we're setting

48
00:04:27,160 --> 00:04:31,580
a font size to be a random value between 40 and 80.

49
00:04:31,610 --> 00:04:36,500
We're also passing in this field that contains our text by giving an access a function to this text

50
00:04:36,500 --> 00:04:37,790
method.

51
00:04:37,790 --> 00:04:41,010
In this case we want to show the team names in English.

52
00:04:41,950 --> 00:04:44,450
This listener here will draw the line for us.

53
00:04:44,440 --> 00:04:46,390
Once the algorithm is complete.

54
00:04:46,570 --> 00:04:53,920
Using this Krol function finally we're calling starts on this lay out which starts the Liya algorithm

55
00:04:53,920 --> 00:05:00,300
going once D-3 cloud has figured out exactly where the words should be placed.

56
00:05:00,430 --> 00:05:04,990
The code inside of cross-functional will add in a new word for every item.

57
00:05:04,990 --> 00:05:11,800
Data the words value head that we're passing in is coming from a layout function which gives us the

58
00:05:11,800 --> 00:05:14,610
transformed version of our original array.

59
00:05:15,610 --> 00:05:22,450
We're setting the fill of our text SVGA based on the color scale and then we're saying this size font

60
00:05:22,870 --> 00:05:26,000
text content and position based on data.

61
00:05:26,020 --> 00:05:30,940
After this lecture you should now be able to create a word cloud of your own by adapting a file like

62
00:05:30,940 --> 00:05:33,700
this to work with your data.

63
00:05:33,720 --> 00:05:38,640
By this point you should hopefully be starting to get the hang of the process of understanding someone

64
00:05:38,640 --> 00:05:43,150
else's code which is written into three in the next lecture.

65
00:05:43,150 --> 00:05:47,070
I'll be testing out what you've learned with the last that we've covered so far.

66
00:05:47,260 --> 00:05:50,620
Making sure that you have a good understanding of what we've been covering.

